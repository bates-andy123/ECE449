
;
; Created on Thu Mar 28 15:57:53 2019 with ECE 449 assembler v1.10 Beta 4 (16 bit).
;
;Header Section
RADIX 10
DEPTH 512
WIDTH 16
DEFAULT 0
;
; Data Section
; Specifies data to be stored in different addresses
; e.g., DATA 0:A, 1:0
;
RADIX 16
DATA 
0000 => "0010010111111111", -- 0000 - 25FF                     loadimm.upper LedDisplay.hi
0002 => "0010010011110010", -- 0002 - 24F2                     loadimm.lower LedDisplay.lo
0004 => "0010011101111000", -- 0004 - 2778                     mov           r5,r7
0006 => "1000000000000100", -- 0006 - 8004                     brr           ResetExecute
0008 => "1000000000101011", -- 0008 - 802B                     brr           ResetLoad
0010 => "1000000000000001", -- 000A - 8001                     brr           Interrupt
0012 => "1000000000000000", -- 000C - 8000 WaitForever:        brr           WaitForever
0014 => "0010010100000100", -- 000E - 2504 ResetExecute:       loadimm.upper BootVector.hi
0016 => "0010010000000000", -- 0010 - 2400                     loadimm.lower BootVector.lo
0018 => "0010000111111000", -- 0012 - 21F8                     load          r7,r7
0020 => "0000000000000000", -- 0014 - 0000                     nop          
0022 => "0000000000000000", -- 0016 - 0000                     nop          
0024 => "0010010000000000", -- 0018 - 2400                     loadimm.lower 0x00
0026 => "0010011010111000", -- 001A - 26B8                     mov           r2,r7
0028 => "0010010100100101", -- 001C - 2525                     loadimm.upper 0x25
0030 => "0010010000000000", -- 001E - 2400                     loadimm.lower 0x00
0032 => "0000010010010111", -- 0020 - 0497                     sub           r2,r2,r7
0034 => "0000111010000000", -- 0022 - 0E80                     test          r2
0036 => "1000010000000010", -- 0024 - 8402                     brr.z         ResetExecute_1
0038 => "1000000111110011", -- 0026 - 81F3                     brr           WaitForever
0040 => "0010010100000100", -- 0028 - 2504                     loadimm.upper BootVector_1.hi
0042 => "0010010000000010", -- 002A - 2402                     loadimm.lower BootVector_1.lo
0044 => "0010000111111000", -- 002C - 21F8                     load          r7,r7
0046 => "0000000000000000", -- 002E - 0000                     nop          
0048 => "0000000000000000", -- 0030 - 0000                     nop          
0050 => "0010010000000000", -- 0032 - 2400                     loadimm.lower 0x00
0052 => "0010011010111000", -- 0034 - 26B8                     mov           r2,r7
0054 => "0010010100100100", -- 0036 - 2524                     loadimm.upper 0x24
0056 => "0010010000000000", -- 0038 - 2400                     loadimm.lower 0x00
0058 => "0000010010010111", -- 003A - 0497                     sub           r2,r2,r7
0060 => "0000111010000000", -- 003C - 0E80                     test          r2
0062 => "1000010000000010", -- 003E - 8402                     brr.z         ResetExecute_2
0064 => "1000000111100110", -- 0040 - 81E6                     brr           WaitForever
0066 => "0010010100000100", -- 0042 - 2504                     loadimm.upper BootVector_2.hi
0068 => "0010010000000100", -- 0044 - 2404                     loadimm.lower BootVector_2.lo
0070 => "0010000010111000", -- 0046 - 20B8                     load          r2,r7
0072 => "0000000000000000", -- 0048 - 0000                     nop          
0074 => "0000000000000000", -- 004A - 0000                     nop          
0076 => "0010010110000111", -- 004C - 2587                     loadimm.upper 0x87
0078 => "0010010011000000", -- 004E - 24C0                     loadimm.lower 0xc0
0080 => "0000010010010111", -- 0050 - 0497                     sub           r2,r2,r7
0082 => "0000111010000000", -- 0052 - 0E80                     test          r2
0084 => "1000010000000010", -- 0054 - 8402                     brr.z         ResetExecute_3
0086 => "1000000111011011", -- 0056 - 81DB                     brr           WaitForever
0088 => "0010010100000100", -- 0058 - 2504                     loadimm.upper BootVector.hi
0090 => "0010010000000000", -- 005A - 2400                     loadimm.lower BootVector.lo
0092 => "1000011111000000", -- 005C - 87C0                     br            r7,0
0094 => "0010010100000000", -- 005E - 2500 ResetLoad:          loadimm.upper 0x00
0096 => "0010010010000000", -- 0060 - 2480                     loadimm.lower 0x80
0098 => "0010011110111000", -- 0062 - 27B8                     mov           r6,r7
0100 => "0100001010000000", -- 0064 - 4280 WaitFor_AA:         in            r2
0102 => "0000100010010110", -- 0066 - 0896                     nand          r2,r2,r6
0104 => "0000100010010010", -- 0068 - 0892                     nand          r2,r2,r2
0106 => "0000111010000000", -- 006A - 0E80                     test          r2
0108 => "1000010111111100", -- 006C - 85FC                     brr.z         WaitFor_AA
0110 => "0010010111111111", -- 006E - 25FF                     loadimm.upper 0xFF
0112 => "0010010000000000", -- 0070 - 2400                     loadimm.lower 0x00
0114 => "0100001010000000", -- 0072 - 4280                     in            r2
0116 => "0000100010010111", -- 0074 - 0897                     nand          r2,r2,r7
0118 => "0000100010010010", -- 0076 - 0892                     nand          r2,r2,r2
0120 => "0010010110101010", -- 0078 - 25AA                     LOADIMM.UPPER 0xAA
0122 => "0000010010010111", -- 007A - 0497                     sub           r2,r2,r7
0124 => "0000111010000000", -- 007C - 0E80                     test          r2
0126 => "1000010000000010", -- 007E - 8402                     brr.z         Got_AA
0128 => "1000000111110010", -- 0080 - 81F2                     brr           WaitFor_AA
0130 => "0010010000000001", -- 0082 - 2401 Got_AA:             loadimm.lower 0x01
0132 => "0000000000000000", -- 0084 - 0000                     nop          
0134 => "0000000000000000", -- 0086 - 0000                     nop          
0136 => "0000000000000000", -- 0088 - 0000                     nop          
0138 => "0100000111000000", -- 008A - 41C0                     out           r7
0140 => "0100001010000000", -- 008C - 4280                     in            r2
0142 => "0000100010010110", -- 008E - 0896                     nand          r2,r2,r6
0144 => "0000100010010010", -- 0090 - 0892                     nand          r2,r2,r2
0146 => "0000111010000000", -- 0092 - 0E80                     test          r2
0148 => "1000010000000010", -- 0094 - 8402                     brr.z         Done_AA
0150 => "1000000111111011", -- 0096 - 81FB                     brr           WaitForEnd_AA
0152 => "0010010000000000", -- 0098 - 2400 Done_AA:            loadimm.lower 0x00
0154 => "0000000000000000", -- 009A - 0000                     nop          
0156 => "0000000000000000", -- 009C - 0000                     nop          
0158 => "0000000000000000", -- 009E - 0000                     nop          
0160 => "0100000111000000", -- 00A0 - 41C0                     out           r7
0162 => "0010010100000100", -- 00A2 - 2504                     loadimm.upper RamStart.hi
0164 => "0010010000000000", -- 00A4 - 2400                     loadimm.lower RamStart.lo
0166 => "0010011110111000", -- 00A6 - 27B8                     mov           r6,r7
0168 => "0010010100000000", -- 00A8 - 2500                     loadimm.upper 0x00
0170 => "0010010000000010", -- 00AA - 2402                     loadimm.lower 0x02
0172 => "0010001110111000", -- 00AC - 23B8                     store         r6,r7
0174 => "0010010100000000", -- 00AE - 2500                     loadimm.upper 0x00
0176 => "0010010010000000", -- 00B0 - 2480                     loadimm.lower 0x80
0178 => "0010011110111000", -- 00B2 - 27B8                     mov           r6,r7
0180 => "0100001010000000", -- 00B4 - 4280 WaitFor_55:         in            r2
0182 => "0000100010010110", -- 00B6 - 0896                     nand          r2,r2,r6
0184 => "0000100010010010", -- 00B8 - 0892                     nand          r2,r2,r2
0186 => "0000111010000000", -- 00BA - 0E80                     test          r2
0188 => "1000010111111100", -- 00BC - 85FC                     brr.z         WaitFor_55
0190 => "0010010111111111", -- 00BE - 25FF                     loadimm.upper 0xFF
0192 => "0010010000000000", -- 00C0 - 2400                     loadimm.lower 0x00
0194 => "0100001010000000", -- 00C2 - 4280                     in            r2
0196 => "0000100010010111", -- 00C4 - 0897                     nand          r2,r2,r7
0198 => "0000100010010010", -- 00C6 - 0892                     nand          r2,r2,r2
0200 => "0010010101010101", -- 00C8 - 2555                     LOADIMM.UPPER 0x55
0202 => "0000010010010111", -- 00CA - 0497                     sub           r2,r2,r7
0204 => "0000111010000000", -- 00CC - 0E80                     test          r2
0206 => "1000010000000010", -- 00CE - 8402                     brr.z         Got_55
0208 => "1000000111110010", -- 00D0 - 81F2                     brr           WaitFor_55
0210 => "0010010000000001", -- 00D2 - 2401 Got_55:             loadimm.lower 0x01
0212 => "0000000000000000", -- 00D4 - 0000                     nop          
0214 => "0000000000000000", -- 00D6 - 0000                     nop          
0216 => "0000000000000000", -- 00D8 - 0000                     nop          
0218 => "0100000111000000", -- 00DA - 41C0                     out           r7
0220 => "0100001010000000", -- 00DC - 4280                     in            r2
0222 => "0000100010010110", -- 00DE - 0896                     nand          r2,r2,r6
0224 => "0000100010010010", -- 00E0 - 0892                     nand          r2,r2,r2
0226 => "0000111010000000", -- 00E2 - 0E80                     test          r2
0228 => "1000010000000010", -- 00E4 - 8402                     brr.z         Done_55
0230 => "1000000111111011", -- 00E6 - 81FB                     brr           WaitForEnd_55
0232 => "0010010000000000", -- 00E8 - 2400 Done_55:            loadimm.lower 0x00
0234 => "0000000000000000", -- 00EA - 0000                     nop          
0236 => "0000000000000000", -- 00EC - 0000                     nop          
0238 => "0000000000000000", -- 00EE - 0000                     nop          
0240 => "0100000111000000", -- 00F0 - 41C0                     out           r7
0242 => "0010010100000000", -- 00F2 - 2500                     loadimm.upper 0x00
0244 => "0010010010000000", -- 00F4 - 2480                     loadimm.lower 0x80
0246 => "0010011110111000", -- 00F6 - 27B8                     mov           r6,r7
0248 => "0100001010000000", -- 00F8 - 4280 WaitForSize:        in            r2
0250 => "0010011100010000", -- 00FA - 2710                     mov           r4,r2
0252 => "0000100010010110", -- 00FC - 0896                     nand          r2,r2,r6
0254 => "0000100010010010", -- 00FE - 0892                     nand          r2,r2,r2
0256 => "0000111010000000", -- 0100 - 0E80                     test          r2
0258 => "1000010111111011", -- 0102 - 85FB                     brr.z         WaitForSize
0260 => "0000110100001000", -- 0104 - 0D08                     shr           r4,8
0262 => "0010010000000001", -- 0106 - 2401                     loadimm.lower 0x01
0264 => "0000000000000000", -- 0108 - 0000                     nop          
0266 => "0000000000000000", -- 010A - 0000                     nop          
0268 => "0000000000000000", -- 010C - 0000                     nop          
0270 => "0100000111000000", -- 010E - 41C0                     out           r7
0272 => "0100001010000000", -- 0110 - 4280                     in            r2
0274 => "0000100010010110", -- 0112 - 0896                     nand          r2,r2,r6
0276 => "0000100010010010", -- 0114 - 0892                     nand          r2,r2,r2
0278 => "0000111010000000", -- 0116 - 0E80                     test          r2
0280 => "1000010000000010", -- 0118 - 8402                     brr.z         DoneSize
0282 => "1000000111111011", -- 011A - 81FB                     brr           WaitForSizeEnd
0284 => "0010010000000000", -- 011C - 2400 DoneSize:           loadimm.lower 0x00
0286 => "0000000000000000", -- 011E - 0000                     nop          
0288 => "0000000000000000", -- 0120 - 0000                     nop          
0290 => "0000000000000000", -- 0122 - 0000                     nop          
0292 => "0100000111000000", -- 0124 - 41C0                     out           r7
0294 => "0010010100000010", -- 0126 - 2502                     loadimm.upper 0x02
0296 => "0010010000000000", -- 0128 - 2400                     loadimm.lower 0x00
0298 => "0010011011111000", -- 012A - 26F8                     mov           r3,r7
0300 => "0010010111111111", -- 012C - 25FF GetProgram:         loadimm.upper LedDisplay.hi
0302 => "0010010011110010", -- 012E - 24F2                     loadimm.lower LedDisplay.lo
0304 => "0000000000000000", -- 0130 - 0000                     nop          
0306 => "0000000000000000", -- 0132 - 0000                     nop          
0308 => "0000000000000000", -- 0134 - 0000                     nop          
0310 => "0000000000000000", -- 0136 - 0000                     nop          
0312 => "0000000000000000", -- 0138 - 0000                     nop          
0314 => "0010001111100000", -- 013A - 23E0                     store         r7,r4
0316 => "0000111100000000", -- 013C - 0F00                     test          r4
0318 => "1000010101100111", -- 013E - 8567                     brr.z         WaitForever
0320 => "0100001010000000", -- 0140 - 4280                     in            r2
0322 => "0010011001010000", -- 0142 - 2650                     mov           r1,r2
0324 => "0000100010010110", -- 0144 - 0896                     nand          r2,r2,r6
0326 => "0000100010010010", -- 0146 - 0892                     nand          r2,r2,r2
0328 => "0000111010000000", -- 0148 - 0E80                     test          r2
0330 => "1000010111111011", -- 014A - 85FB                     brr.z         WaitForHighByte
0332 => "0000110001001000", -- 014C - 0C48                     shr           r1,8
0334 => "0000101001001000", -- 014E - 0A48                     shl           r1,8
0336 => "0010010000000001", -- 0150 - 2401                     loadimm.lower 0x01
0338 => "0000000000000000", -- 0152 - 0000                     nop          
0340 => "0000000000000000", -- 0154 - 0000                     nop          
0342 => "0000000000000000", -- 0156 - 0000                     nop          
0344 => "0100000111000000", -- 0158 - 41C0                     out           r7
0346 => "0100001010000000", -- 015A - 4280                     in            r2
0348 => "0000100010010110", -- 015C - 0896                     nand          r2,r2,r6
0350 => "0000100010010010", -- 015E - 0892                     nand          r2,r2,r2
0352 => "0000111010000000", -- 0160 - 0E80                     test          r2
0354 => "1000010000000010", -- 0162 - 8402                     brr.z         DoneHighByte
0356 => "1000000111111011", -- 0164 - 81FB                     brr           WaitForHighByteEnd
0358 => "0010010000000000", -- 0166 - 2400                     loadimm.lower 0x00
0360 => "0000000000000000", -- 0168 - 0000                     nop          
0362 => "0000000000000000", -- 016A - 0000                     nop          
0364 => "0000000000000000", -- 016C - 0000                     nop          
0366 => "0100000111000000", -- 016E - 41C0                     out           r7
0368 => "0010011000001000", -- 0170 - 2608                     mov           r0,r1
0370 => "0100001010000000", -- 0172 - 4280                     in            r2
0372 => "0010011001010000", -- 0174 - 2650                     mov           r1,r2
0374 => "0000100010010110", -- 0176 - 0896                     nand          r2,r2,r6
0376 => "0000100010010010", -- 0178 - 0892                     nand          r2,r2,r2
0378 => "0000111010000000", -- 017A - 0E80                     test          r2
0380 => "1000010111111011", -- 017C - 85FB                     brr.z         WaitForLowByte
0382 => "0000110001001000", -- 017E - 0C48                     shr           r1,8
0384 => "0010010000000001", -- 0180 - 2401                     loadimm.lower 0x01
0386 => "0000000000000000", -- 0182 - 0000                     nop          
0388 => "0000000000000000", -- 0184 - 0000                     nop          
0390 => "0000000000000000", -- 0186 - 0000                     nop          
0392 => "0100000111000000", -- 0188 - 41C0                     out           r7
0394 => "0100001010000000", -- 018A - 4280                     in            r2
0396 => "0000100010010110", -- 018C - 0896                     nand          r2,r2,r6
0398 => "0000100010010010", -- 018E - 0892                     nand          r2,r2,r2
0400 => "0000111010000000", -- 0190 - 0E80                     test          r2
0402 => "1000010000000010", -- 0192 - 8402                     brr.z         DoneLowByte
0404 => "1000000111111011", -- 0194 - 81FB                     brr           WaitForLowByteEnd
0406 => "0100001010000000", -- 0196 - 4280 DoneLowByte:        in            r2
0408 => "0010010000000000", -- 0198 - 2400                     loadimm.lower 0x00
0410 => "0000000000000000", -- 019A - 0000                     nop          
0412 => "0000000000000000", -- 019C - 0000                     nop          
0414 => "0000000000000000", -- 019E - 0000                     nop          
0416 => "0100000111000000", -- 01A0 - 41C0                     out           r7
0418 => "0000001001001000", -- 01A2 - 0248                     add           r1,r1,r0
0420 => "0000101010001001", -- 01A4 - 0A89                     shl           r2,9
0422 => "0000110010001111", -- 01A6 - 0C8F                     shr           r2,15
0424 => "0000111010000000", -- 01A8 - 0E80                     test          r2
0426 => "1000010000010101", -- 01AA - 8415                     brr.z         GotInstruction
0428 => "0010011011001000", -- 01AC - 26C8                     mov           r3,r1
0430 => "0010010100000000", -- 01AE - 2500                     loadimm.upper StepSize.hi
0432 => "0010010000000010", -- 01B0 - 2402                     loadimm.lower StepSize.lo
0434 => "0010011010111000", -- 01B2 - 26B8                     mov           r2,r7
0436 => "0010010100000100", -- 01B4 - 2504                     loadimm.upper BootVector.hi
0438 => "0010010000000000", -- 01B6 - 2400                     loadimm.lower BootVector.lo
0440 => "0010011000111000", -- 01B8 - 2638                     mov           r0,r7
0442 => "0010011111011000", -- 01BA - 27D8                     mov           r7,r3
0444 => "0000110111001000", -- 01BC - 0DC8                     shr           r7,8
0446 => "0010010100100101", -- 01BE - 2525                     loadimm.upper 0x25
0448 => "0010001000111000", -- 01C0 - 2238                     store         r0,r7
0450 => "0000001000000010", -- 01C2 - 0202                     add           r0,r0,r2
0452 => "0010011111011000", -- 01C4 - 27D8                     mov           r7,r3
0454 => "0010010100100100", -- 01C6 - 2524                     loadimm.upper 0x24
0456 => "0010001000111000", -- 01C8 - 2238                     store         r0,r7
0458 => "0000001000000010", -- 01CA - 0202                     add           r0,r0,r2
0460 => "0010010110000111", -- 01CC - 2587                     loadimm.upper 0x87
0462 => "0010010011000000", -- 01CE - 24C0                     loadimm.lower 0xC0
0464 => "0010001000111000", -- 01D0 - 2238                     store         r0,r7
0466 => "1000000000000101", -- 01D2 - 8005                     brr           DecrementCount
0468 => "0010001011001000", -- 01D4 - 22C8 GotInstruction:     store         r3,r1
0470 => "0010010100000000", -- 01D6 - 2500                     loadimm.upper StepSize.hi
0472 => "0010010000000010", -- 01D8 - 2402                     loadimm.lower StepSize.lo
0474 => "0000001011011111", -- 01DA - 02DF                     add           r3,r3,r7
0476 => "0010010100000000", -- 01DC - 2500                     loadimm.upper 0x00
0478 => "0010010000000001", -- 01DE - 2401                     loadimm.lower 0x01
0480 => "0000010100100111", -- 01E0 - 0527                     sub           r4,r4,r7
0482 => "1000000110100101", -- 01E2 - 81A5                     brr           GetProgram


-------------------------------------------------------
Symbol Table:
BootVector            1024 (0400)
BootVector_1          1026 (0402)
BootVector_2          1028 (0404)
DecrementCount         476 (01DC)
DoneHighByte           358 (0166)
DoneLowByte            406 (0196)
DoneSize               284 (011C)
Done_55                232 (00E8)
Done_AA                152 (0098)
GetProgram             300 (012C)
GotInstruction         468 (01D4)
Got_55                 210 (00D2)
Got_AA                 130 (0082)
Interrupt               12 (000C)
LedDisplay           65522 (FFF2)
RamStart              1024 (0400)
ResetExecute            14 (000E)
ResetExecute_1          40 (0028)
ResetExecute_2          66 (0042)
ResetExecute_3          88 (0058)
ResetLoad               94 (005E)
StepSize                 2 (0002)
WaitForEnd_55          220 (00DC)
WaitForEnd_AA          140 (008C)
WaitForHighByte        320 (0140)
WaitForHighByteEnd     346 (015A)
WaitForLowByte         370 (0172)
WaitForLowByteEnd      394 (018A)
WaitForSize            248 (00F8)
WaitForSizeEnd         272 (0110)
WaitFor_55             180 (00B4)
WaitFor_AA             100 (0064)
WaitForever             12 (000C)

